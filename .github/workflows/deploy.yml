# .github/workflows/deploy.yml
name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
  workflow_dispatch: # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: npm install

      - name: Create D1 Database (if it doesn't exist)
        run: |
          # 尝试创建数据库，如果已存在则忽略错误
          npx wrangler d1 create cookiecloud-db || echo "Database might already exist"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Get D1 Database ID and Update Config
        run: |
          DB_ID=$(npx wrangler d1 info cookiecloud-db --json | grep -o '"uuid": *"[^"]*"' | grep -o '"[^"]*"$' | tr -d '"')
          
          if [ -z "$DB_ID" ]; then
            echo "::error::Failed to get D1 Database ID."
            exit 1
          fi
          
          echo "Got Database ID: $DB_ID"
          
          sed -i "s/database_id = \"\"/database_id = \"$DB_ID\"/" wrangler.toml
          
          echo "Successfully updated wrangler.toml with the database_id."
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Apply D1 Migrations
        run: npx wrangler d1 execute cookiecloud-db --file=./schema.sql --remote
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}